{"ast":null,"code":"var _jsxFileName = \"/Users/dollarzhu/Documents/Topline Projects/QuoteMaster/quotemaster/src/GPTArea.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst GPTArea = () => {\n  _s();\n  const [input, setInput] = useState(\"\");\n  const [completedSentence, setCompletedSentence] = useState(\"\");\n  const API_KEY = \"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\";\n  const fetchData = async input => {\n    const response = await axios.post(\"https://api.openai.com/v1/completions\", {\n      prompt: `Complete this sentence: \"${input}\"`,\n      model: \"gpt-4\",\n      max_tokens: 50,\n      n: 1,\n      stop: \".\"\n    }, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Authorization: `Bearer ${API_KEY}`\n      }\n    });\n    return response.data.choices[0].text;\n  };\n  async function handleClick() {\n    try {\n      const completedSentence = await fetchData(input);\n      setCompletedSentence(completedSentence);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Tell me something, and I'll tell you more\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n      value: input,\n      onChange: event => setInput(event.target.value),\n      rows: 5,\n      placeholder: \"Type in some words and I'll finish the rest...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"button\",\n      onClick: handleClick,\n      children: \"Complete Sentence\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), completedSentence && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Completed sentence: \", completedSentence]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n};\n_s(GPTArea, \"9yNve6Ue6uUUP+7gaM4lc+ieZVg=\");\n_c = GPTArea;\nexport default GPTArea;\nvar _c;\n$RefreshReg$(_c, \"GPTArea\");","map":{"version":3,"names":["React","useState","axios","jsxDEV","_jsxDEV","GPTArea","_s","input","setInput","completedSentence","setCompletedSentence","API_KEY","fetchData","response","post","prompt","model","max_tokens","n","stop","headers","Authorization","data","choices","text","handleClick","error","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","event","target","rows","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/dollarzhu/Documents/Topline Projects/QuoteMaster/quotemaster/src/GPTArea.js"],"sourcesContent":["import React from \"react\";\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\nconst GPTArea = () => {\n  const [input, setInput] = useState(\"\");\n  const [completedSentence, setCompletedSentence] = useState(\"\");\n  const API_KEY = \"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\";\n\n  const fetchData = async (input) => {\n    const response = await axios.post(\n      \"https://api.openai.com/v1/completions\",\n      {\n        prompt: `Complete this sentence: \"${input}\"`,\n        model: \"gpt-4\",\n        max_tokens: 50,\n        n: 1,\n        stop: \".\",\n      },\n      {\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${API_KEY}`,\n        },\n      }\n    );\n\n    return response.data.choices[0].text;\n  };\n\n  async function handleClick() {\n    try {\n      const completedSentence = await fetchData(input);\n      setCompletedSentence(completedSentence);\n    } catch (error) {\n      console.error(error);\n    }\n  }\n\n  return (\n    <div className=\"container\">\n      <h2>Tell me something, and I'll tell you more</h2>\n      <textarea\n        value={input}\n        onChange={(event) => setInput(event.target.value)}\n        rows={5}\n        placeholder=\"Type in some words and I'll finish the rest...\"\n      />\n      <button className=\"button\" onClick={handleClick}>\n        Complete Sentence\n      </button>\n      {completedSentence && <p>Completed sentence: {completedSentence}</p>}\n    </div>\n  );\n};\n\nexport default GPTArea;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,OAAO;AAChC,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,MAAMC,OAAO,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACpB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACQ,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC9D,MAAMU,OAAO,GAAG,qDAAqD;EAErE,MAAMC,SAAS,GAAG,MAAOL,KAAK,IAAK;IACjC,MAAMM,QAAQ,GAAG,MAAMX,KAAK,CAACY,IAAI,CAC/B,uCAAuC,EACvC;MACEC,MAAM,EAAG,4BAA2BR,KAAM,GAAE;MAC5CS,KAAK,EAAE,OAAO;MACdC,UAAU,EAAE,EAAE;MACdC,CAAC,EAAE,CAAC;MACJC,IAAI,EAAE;IACR,CAAC,EACD;MACEC,OAAO,EAAE;QACP,cAAc,EAAE,kBAAkB;QAClCC,aAAa,EAAG,UAASV,OAAQ;MACnC;IACF,CACF,CAAC;IAED,OAAOE,QAAQ,CAACS,IAAI,CAACC,OAAO,CAAC,CAAC,CAAC,CAACC,IAAI;EACtC,CAAC;EAED,eAAeC,WAAWA,CAAA,EAAG;IAC3B,IAAI;MACF,MAAMhB,iBAAiB,GAAG,MAAMG,SAAS,CAACL,KAAK,CAAC;MAChDG,oBAAoB,CAACD,iBAAiB,CAAC;IACzC,CAAC,CAAC,OAAOiB,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAACA,KAAK,CAAC;IACtB;EACF;EAEA,oBACEtB,OAAA;IAAKwB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBzB,OAAA;MAAAyB,QAAA,EAAI;IAAyC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eAClD7B,OAAA;MACE8B,KAAK,EAAE3B,KAAM;MACb4B,QAAQ,EAAGC,KAAK,IAAK5B,QAAQ,CAAC4B,KAAK,CAACC,MAAM,CAACH,KAAK,CAAE;MAClDI,IAAI,EAAE,CAAE;MACRC,WAAW,EAAC;IAAgD;MAAAT,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7D,CAAC,eACF7B,OAAA;MAAQwB,SAAS,EAAC,QAAQ;MAACY,OAAO,EAAEf,WAAY;MAAAI,QAAA,EAAC;IAEjD;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACRxB,iBAAiB,iBAAIL,OAAA;MAAAyB,QAAA,GAAG,sBAAoB,EAACpB,iBAAiB;IAAA;MAAAqB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEV,CAAC;AAAC3B,EAAA,CAlDID,OAAO;AAAAoC,EAAA,GAAPpC,OAAO;AAoDb,eAAeA,OAAO;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}